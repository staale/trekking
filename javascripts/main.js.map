{"version":3,"file":"public/javascripts/main.js","sources":["app/components/ColorCheckerComponent.coffee","app/config/app.coffee","app/config/router.coffee","app/controllers/IndexController.coffee","app/initialize.coffee","app/models/Colors.coffee","app/models/Pick.coffee","app/models/Setup.coffee","app/routes/GameRoute.coffee","app/routes/IndexRoute.coffee","app/templates/application.hbs","app/templates/components/color-checker.hbs","app/templates/index.hbs","app/templates/play.hbs","app/templates/setup.hbs","app/views/IndexView.coffee","app/views/ScaledView.coffee"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlCA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3CA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzDA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnlGA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxDA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAAA","sourcesContent":["module.exports = App.ColorCheckerComponent = Ember.Component.extend({\n  tagName: \"i\",\n  animate: 0,\n  classNames: [\"fa\"],\n  classNameBindings: [\"checked:fa-check-circle-o:fa-circle-o\"],\n  attributeBindings: [\"style\"],\n  color: null,\n  oldColor: \"#000000\",\n  values: [],\n  action: \"toggle\",\n  style: \"\",\n  effect: \"bounceOut\",\n  didInsertElement: function() {\n    return this.$().css(\"color\", this.get(\"color.color\"));\n  },\n  keepOldColor: (function() {\n    return this.set(\"oldColor\", this.get(\"color.color\"));\n  }).observesBefore(\"color\"),\n  styleAnimation: (function() {\n    this.$().tween({\n      color: {\n        time: 0,\n        start: this.get(\"oldColor\"),\n        stop: this.get(\"color.color\"),\n        duration: this.get(\"animate\"),\n        effect: this.get(\"effect\")\n      }\n    });\n    return $.play();\n  }).observes(\"color\"),\n  checked: (function() {\n    return this.get(\"values\").contains(this.get(\"color\"));\n  }).property(\"color\", \"values.@each\")\n});\n","module.exports = Ember.Application.create({\n  LOG_TRANSITIONS: true\n});\n","module.exports = App.Router.map(function() {\n  return this.resource(\"game\");\n});\n","var ColorInfo;\n\nColorInfo = Ember.Object.extend({\n  color: null,\n  setup: null,\n  checked: (function() {\n    return this.get(\"setup.colors\").getEach(\"name\").contains(this.get(\"color.name\"));\n  }).property(\"color\", \"setup.colors.@each\")\n});\n\nmodule.exports = App.IndexController = Ember.ObjectController.extend({\n  setup: true,\n  colors: (function() {\n    var _this = this;\n    return App.Color.available().map(function(color) {\n      return ColorInfo.create({\n        color: color,\n        setup: _this.get(\"model\")\n      });\n    });\n  }).property(),\n  actions: {\n    toggle: function(color) {\n      if (this.get(\"model.colors\").contains(color)) {\n        return this.get(\"model.colors\").removeObject(color);\n      } else {\n        return this.get(\"model.colors\").pushObject(color);\n      }\n    },\n    start: function() {\n      this.get(\"model\").shuffle();\n      return this.set(\"setup\", false);\n    },\n    setup: function() {\n      return this.set(\"setup\", true);\n    },\n    nextDraw: function() {\n      if (!this.get(\"setup\")) {\n        return this.incrementProperty(\"model.pickNo\");\n      }\n    }\n  }\n});\n","var folderOrder;\n\nwindow.App = require('config/app');\n\nrequire('config/router');\n\nfolderOrder = ['initializers', 'mixins', 'routes', 'models', 'views', 'controllers', 'helpers', 'templates', 'components'];\n\nfolderOrder.forEach(function(folder) {\n  return window.require.list().filter(function(module) {\n    return new RegExp(\"^\" + folder + \"/\").test(module);\n  }).forEach(function(module) {\n    return require(module);\n  });\n});\n","var ALL_COLORS, color;\n\nmodule.exports = App.Color = Ember.Object.extend({\n  color: null,\n  name: \"\"\n});\n\ncolor = function(name, rgb) {\n  return App.Color.create({\n    color: rgb,\n    name: name\n  });\n};\n\nALL_COLORS = [color(\"Blå\", \"#5bc0de\"), color(\"Gul\", \"#f0ad4e\"), color(\"Rød\", \"#d9534f\"), color(\"Grønn\", \"#5cb85c\"), color(\"Sort\", \"#2F4F4F\"), color(\"Hvit\", \"#dddddd\"), color(\"Lilla\", \"#B85CB6\"), color(\"Oransje\", \"#E07B16\")];\n\nApp.Color.reopenClass({\n  available: function() {\n    return ALL_COLORS;\n  }\n});\n","module.exports = App.Pick = Ember.Object.extend({\n  color: null,\n  number: 0\n});\n","module.exports = App.Setup = Ember.Object.extend({\n  colors: null,\n  min: 1,\n  max: 999,\n  pickNo: 0,\n  availablePicks: null,\n  currentPick: (function() {\n    return this.get(\"availablePicks\").objectAt(this.get(\"pickNo\"));\n  }).property(\"availablePicks.@each\", \"pickNo\"),\n  history: (function() {\n    return this.get(\"availablePicks\").slice(0, this.get(\"pickNo\"));\n  }).property(\"availablePicks.@each\", \"pickNo\"),\n  multiColor: (function() {\n    console.log(\"Multicolor: %s, %s\", this.get(\"colors.length\"), this.get(\"colors.length\") > 1);\n    return this.get(\"colors.length\") > 1;\n  }).property(\"colors.@each\"),\n  init: function() {\n    this._super();\n    this.set(\"colors\", App.Color.available());\n    return this.set(\"availablePicks\", []);\n  },\n  shuffle: function() {\n    var idx, picks, swap, _i, _j, _ref, _ref1, _ref2, _ref3, _results,\n      _this = this;\n    picks = [];\n    this.get(\"colors\").map(function(color) {\n      var n, _i, _ref, _ref1, _results;\n      _results = [];\n      for (n = _i = _ref = _this.get(\"min\"), _ref1 = _this.get(\"max\"); _ref <= _ref1 ? _i <= _ref1 : _i >= _ref1; n = _ref <= _ref1 ? ++_i : --_i) {\n        _results.push(App.Pick.create({\n          color: color,\n          number: n\n        }));\n      }\n      return _results;\n    }).forEach(function(pickCollection) {\n      return Array.prototype.push.apply(picks, pickCollection);\n    });\n    if (picks.length === 0) {\n      picks = (function() {\n        _results = [];\n        for (var _i = _ref = this.get(\"min\"), _ref1 = this.get(\"max\"); _ref <= _ref1 ? _i <= _ref1 : _i >= _ref1; _ref <= _ref1 ? _i++ : _i--){ _results.push(_i); }\n        return _results;\n      }).apply(this).map(function(n) {\n        return App.Pick.create({\n          number: n\n        });\n      });\n    }\n    for (idx = _j = 0, _ref2 = picks.length - 1; 0 <= _ref2 ? _j <= _ref2 : _j >= _ref2; idx = 0 <= _ref2 ? ++_j : --_j) {\n      swap = idx + Math.floor(Math.random() * (picks.length - idx));\n      _ref3 = [picks[swap], picks[idx]], picks[idx] = _ref3[0], picks[swap] = _ref3[1];\n    }\n    this.set(\"availablePicks\", picks);\n    return this.set(\"pickNo\", 0);\n  }\n});\n","module.exports = App.GameRoute = Ember.Route.extend({\n  setupController: function(controller) {}\n});\n","module.exports = App.IndexRoute = Ember.Route.extend({\n  model: function() {\n    return App.Setup.create();\n  }\n});\n","Ember.TEMPLATES['application'] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', hashTypes, hashContexts, escapeExpression=this.escapeExpression;\n\n\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"outlet\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\n\");\n  return buffer;\n  \n});","Ember.TEMPLATES['components/color-checker'] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var hashTypes, hashContexts, escapeExpression=this.escapeExpression;\n\n\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"yield\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  \n});","Ember.TEMPLATES['index'] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var stack1, hashTypes, hashContexts, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = '', stack1, hashTypes, hashContexts, options;\n  data.buffer.push(\"\\n    \");\n  hashTypes = {};\n  hashContexts = {};\n  options = {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  data.buffer.push(escapeExpression(((stack1 = helpers.partial || depth0.partial),stack1 ? stack1.call(depth0, \"setup\", options) : helperMissing.call(depth0, \"partial\", \"setup\", options))));\n  data.buffer.push(\"\\n\");\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = '', stack1, hashTypes, hashContexts, options;\n  data.buffer.push(\"\\n    \");\n  hashTypes = {};\n  hashContexts = {};\n  options = {hash:{},contexts:[depth0],types:[\"STRING\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  data.buffer.push(escapeExpression(((stack1 = helpers.partial || depth0.partial),stack1 ? stack1.call(depth0, \"play\", options) : helperMissing.call(depth0, \"partial\", \"play\", options))));\n  data.buffer.push(\"\\n\");\n  return buffer;\n  }\n\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers['if'].call(depth0, \"setup\", {hash:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  else { data.buffer.push(''); }\n  \n});","Ember.TEMPLATES['play'] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, hashTypes, hashContexts, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  var buffer = '', stack1, hashTypes, hashContexts;\n  data.buffer.push(\"\\n            \");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers['if'].call(depth0, \"multiColor\", {hash:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n            \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"currentPick.number\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\n        \");\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = '', stack1, stack2, hashContexts, hashTypes, options;\n  data.buffer.push(\"\\n                \");\n  hashContexts = {'colorBinding': depth0};\n  hashTypes = {'colorBinding': \"STRING\"};\n  options = {hash:{\n    'colorBinding': (\"currentPick.color\")\n  },inverse:self.noop,fn:self.program(3, program3, data),contexts:[],types:[],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  stack2 = ((stack1 = helpers['color-checker'] || depth0['color-checker']),stack1 ? stack1.call(depth0, options) : helperMissing.call(depth0, \"color-checker\", options));\n  if(stack2 || stack2 === 0) { data.buffer.push(stack2); }\n  data.buffer.push(\"\\n            \");\n  return buffer;\n  }\nfunction program3(depth0,data) {\n  \n  var buffer = '', hashTypes, hashContexts;\n  data.buffer.push(\"\\n                    \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"currentPick.color.name\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\n                \");\n  return buffer;\n  }\n\nfunction program5(depth0,data) {\n  \n  var buffer = '', stack1, hashTypes, hashContexts;\n  data.buffer.push(\"\\n                        <li>\");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers['if'].call(depth0, \"multiColor\", {hash:{},inverse:self.noop,fn:self.program(6, program6, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n                            \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"entry.number\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</li>\\n                    \");\n  return buffer;\n  }\nfunction program6(depth0,data) {\n  \n  var buffer = '', stack1, stack2, hashContexts, hashTypes, options;\n  data.buffer.push(\"\\n                                \");\n  hashContexts = {'colorBinding': depth0};\n  hashTypes = {'colorBinding': \"STRING\"};\n  options = {hash:{\n    'colorBinding': (\"entry.color\")\n  },inverse:self.noop,fn:self.program(7, program7, data),contexts:[],types:[],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  stack2 = ((stack1 = helpers['color-checker'] || depth0['color-checker']),stack1 ? stack1.call(depth0, options) : helperMissing.call(depth0, \"color-checker\", options));\n  if(stack2 || stack2 === 0) { data.buffer.push(stack2); }\n  data.buffer.push(\"\\n                            \");\n  return buffer;\n  }\nfunction program7(depth0,data) {\n  \n  var buffer = '', hashTypes, hashContexts;\n  data.buffer.push(\"\\n                                    \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"entry.color.name\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\n                                \");\n  return buffer;\n  }\n\n  data.buffer.push(\"<div class=\\\"play\\\">\\n    <div class=\\\"col-md-9 col-sm-12\\\">\\n        <h1>Siste trekkning</h1>\\n        \");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers.view.call(depth0, \"App.ScaledView\", {hash:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n    </div>\\n    <div class=\\\"col-md-3 col-sm-12\\\">\\n        <div class=\\\"panel\\\" style=\\\"height: 400px; overflow-y: scroll\\\">\\n            <div class=\\\"panel-heading\\\">\\n                <h3 class=\\\"panel-title\\\">Historikk</h3>\\n            </div>\\n            <div class=\\\"panel-body\\\">\\n                <ul>\\n                    \");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers.each.call(depth0, \"entry\", \"in\", \"history\", {hash:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n                </ul>\\n            </div>\\n        </div>\\n    </div>\\n</div>\");\n  return buffer;\n  \n});","Ember.TEMPLATES['setup'] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n  var buffer = '', stack1, hashTypes, hashContexts, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = '', stack1, hashTypes, hashContexts, options;\n  data.buffer.push(\"\\n                        <li class=\\\"col-xs-6\\\">\\n                            <a \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"toggle\", \"item.color\", {hash:{},contexts:[depth0,depth0],types:[\"ID\",\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">\");\n  hashContexts = {'colorBinding': depth0,'valuesBinding': depth0};\n  hashTypes = {'colorBinding': \"STRING\",'valuesBinding': \"STRING\"};\n  options = {hash:{\n    'colorBinding': (\"item.color\"),\n    'valuesBinding': (\"model.colors\")\n  },contexts:[],types:[],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  data.buffer.push(escapeExpression(((stack1 = helpers['color-checker'] || depth0['color-checker']),stack1 ? stack1.call(depth0, options) : helperMissing.call(depth0, \"color-checker\", options))));\n  data.buffer.push(\" \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"item.color.name\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</a>\\n                        </li>\\n                    \");\n  return buffer;\n  }\n\n  data.buffer.push(\"<div class=\\\"jumbotron\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n            <img src=\\\"bmk.gif\\\" class=\\\"col-xs-3\\\">\\n            <h1 class=\\\"col-xs-9\\\">\\n                Loddtrekkning\\n            </h1>\\n            <h2 class=\\\"push-3 col-xs-9\\\">Oppsett</h2>\\n        </div>\\n\\n    </div>\\n</div>\\n<form role=\\\"form\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row\\\" style=\\\"font-size: x-large\\\">\\n            <div class=\\\"col-md-6 col-xs-12\\\">\\n                <h3>Farger</h3>\\n                <ul class=\\\"nav nav-pills\\\">\\n                    \");\n  hashTypes = {};\n  hashContexts = {};\n  stack1 = helpers.each.call(depth0, \"item\", \"in\", \"colors\", {hash:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n                </ul>\\n            </div>\\n            <div class=\\\"col-md-6 col-xs-12\\\">\\n                <h3>Verdier</h3>\\n\\n                <div class=\\\"form-group\\\">\\n                    <label>Minimums verdi:</label>\\n                    \");\n  hashContexts = {'valueBinding': depth0,'class': depth0};\n  hashTypes = {'valueBinding': \"STRING\",'class': \"STRING\"};\n  options = {hash:{\n    'valueBinding': (\"model.min\"),\n    'class': (\"form-control\")\n  },contexts:[],types:[],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  data.buffer.push(escapeExpression(((stack1 = helpers.input || depth0.input),stack1 ? stack1.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n  data.buffer.push(\"\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label>Maximums verdi:</label>\\n                    \");\n  hashContexts = {'valueBinding': depth0,'class': depth0};\n  hashTypes = {'valueBinding': \"STRING\",'class': \"STRING\"};\n  options = {hash:{\n    'valueBinding': (\"model.max\"),\n    'class': (\"form-control\")\n  },contexts:[],types:[],hashContexts:hashContexts,hashTypes:hashTypes,data:data};\n  data.buffer.push(escapeExpression(((stack1 = helpers.input || depth0.input),stack1 ? stack1.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n  data.buffer.push(\"\\n                </div>\\n            </div>\\n        </div>\\n        <ul class=\\\"pager\\\">\\n            <li class=\\\"next\\\"><a \");\n  hashTypes = {};\n  hashContexts = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"start\", {hash:{},contexts:[depth0],types:[\"ID\"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">Start &rarr;</a></li>\\n        </ul>\\n    </div>\\n</form>\\n\");\n  return buffer;\n  \n});","module.exports = App.IndexView = Ember.View.extend({\n  didInsertElement: function() {\n    var _this = this;\n    return $(window).on(\"keypress.indexView click.indexView\", function(e) {\n      var target;\n      target = $(e.target);\n      console.log(e.target, e.target.tagName, target.parents(\".play\"));\n      if (target.parents(\".play\").length || !target.parents(\".container\").length) {\n        if (e.type === \"click\" || e.keyCode === 13) {\n          return _this.get(\"controller\").send(\"nextDraw\");\n        }\n      }\n    });\n  },\n  destroy: function() {\n    return $(window).off(\".indexView\");\n  }\n});\n","module.exports = App.ScaledView = Ember.View.extend({\n  classNames: [\"text-center\"],\n  didInsertElement: function() {\n    var _this = this;\n    $(window).on(\"resize\", function() {\n      return _this.resize();\n    });\n    return this.resize();\n  },\n  resize: function() {\n    var elem;\n    elem = this.$();\n    return elem.css(\"font-size\", elem.width() / 8);\n  }\n});\n"]}